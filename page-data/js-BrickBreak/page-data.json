{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/js-BrickBreak/",
    "result": {"data":{"cur":{"id":"b1239bf4-21f3-522b-859f-c9b2d54f0032","html":"<h1 id=\"시작\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EC%9E%91\" aria-label=\"시작 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시작</h1>\n<h2 id=\"기본-로직\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8-%EB%A1%9C%EC%A7%81\" aria-label=\"기본 로직 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본 로직</h2>\n<blockquote>\n<ul>\n<li>canvas를 사용해 brick, ball, paddle을 도형으로 그려준다</li>\n<li>requestAnimationFrame 함수를 사용해 update와 draw함수를 무한하게 반복적으로 실행하도록 한다</li>\n<li>BrickBreak 클래스의 인스턴스를 생성해 init 함수로 게임을 실행한다</li>\n</ul>\n</blockquote>\n<h3 id=\"requestanimationframe\" style=\"position:relative;\"><a href=\"#requestanimationframe\" aria-label=\"requestanimationframe permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>requestAnimationFrame</h3>\n<blockquote>\n<ul>\n<li>장점: tab이 비활성화 되면 중지, 60프레임으로 동작, 브라우저가 프레임 생성 시간에 맞춰서 애니메이션 코드를 실행 시켜 애니메이션이 부드럽게 동작함</li>\n<li>접근성과 관련해 100% 커버리지가 아니라 polyfill 사용하는 것을 추천 (<a href=\"https://gist.github.com/paulirish/1579671\">https://gist.github.com/paulirish/1579671</a>)</li>\n</ul>\n</blockquote>\n<h3 id=\"canvas\" style=\"position:relative;\"><a href=\"#canvas\" aria-label=\"canvas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>canvas</h3>\n<blockquote>\n<ul>\n<li>beginPath = 선을 그릴때 시작하는 함수\n<ul>\n<li>closePath = 선을 그릴때닫아서 시작점과 잇는 함수</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"추가한-내용\" style=\"position:relative;\"><a href=\"#%EC%B6%94%EA%B0%80%ED%95%9C-%EB%82%B4%EC%9A%A9\" aria-label=\"추가한 내용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>추가한 내용</h2>\n<blockquote>\n<ol>\n<li>fontFamily의 크기를 일일히 입력 해주어야하고 canvas에서 한번에 바꾸는 것이 안되어 font의 값들을 배열로 가져온 후 매개변수로 fontSize 값을 받아 canvas에서 사용 가능한 fontFamily의 fontSize를 바꿔주는 함수를 추가 해주었다</li>\n</ol>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function-variable function\">changeFontSize</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">size</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">let</span> fontArgs <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ctx<span class=\"token punctuation\">.</span>font<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">let</span> newSize <span class=\"token operator\">=</span> size<span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ctx<span class=\"token punctuation\">.</span>font <span class=\"token operator\">=</span> newSize <span class=\"token operator\">+</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> fontArgs<span class=\"token punctuation\">[</span>fontArgs<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<ol start=\"2\">\n<li>게임 루프에서는 보통 start/init -> update -> render/draw -> shutdown/restart 와 같은 로직으로 진행 된다고 알고 있어 logic 부분은 update 함수에서 그리고 화면에 그리는 부분은 draw 함수에서 처리 하도록 코드를 변경했다</li>\n</ol>\n</blockquote>\n<p><img src=\"/b5fb20895edaeb4839f5dd50532613b5/game_loop.png\" alt=\"game_loop\"></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function-variable function\">init</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">initBricks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">changeFontSize</span><span class=\"token punctuation\">(</span><span class=\"token string\">'20px'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">keyEvent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token function-variable function\">update</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">updateBallPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">updatePlayerPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">ballCollideWallandPlayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">ballCollideBrick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token function-variable function\">draw</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawBackground</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawBall</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawPaddle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawBricks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawScore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawLives</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>draw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<ol start=\"3\">\n<li>두명이서 동시에 할 수 있게 canvas와 brickBreak 인스턴스를 하나 더 생성했고 playerNum으로 플레이어를 구분해 player1은 방향키, player2는 a,d 를 사용해 paddle을 움직일 수 있게 해주었다</li>\n</ol>\n</blockquote>\n<p><img src=\"/4bb28a12e5953d5a6254f3e48bc2711f/brick.png\" alt=\"brick\"></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function-variable function\">keyupEvent</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\r\n    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>playerNum <span class=\"token operator\">===</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> event<span class=\"token punctuation\">.</span>key <span class=\"token operator\">===</span> <span class=\"token string\">'ArrowRight'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\r\n    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>playerNum <span class=\"token operator\">===</span> <span class=\"token number\">2</span> <span class=\"token operator\">&amp;&amp;</span> event<span class=\"token punctuation\">.</span>key <span class=\"token operator\">===</span> <span class=\"token string\">'d'</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rightPressed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\r\n    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>playerNum <span class=\"token operator\">===</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> event<span class=\"token punctuation\">.</span>key <span class=\"token operator\">===</span> <span class=\"token string\">'ArrowLeft'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\r\n    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>playerNum <span class=\"token operator\">===</span> <span class=\"token number\">2</span> <span class=\"token operator\">&amp;&amp;</span> event<span class=\"token punctuation\">.</span>key <span class=\"token operator\">===</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>leftPressed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token function-variable function\">keydownEvent</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\r\n    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>playerNum <span class=\"token operator\">===</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> event<span class=\"token punctuation\">.</span>key <span class=\"token operator\">===</span> <span class=\"token string\">'ArrowRight'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\r\n    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>playerNum <span class=\"token operator\">===</span> <span class=\"token number\">2</span> <span class=\"token operator\">&amp;&amp;</span> event<span class=\"token punctuation\">.</span>key <span class=\"token operator\">===</span> <span class=\"token string\">'d'</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rightPressed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\r\n    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>playerNum <span class=\"token operator\">===</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> event<span class=\"token punctuation\">.</span>key <span class=\"token operator\">===</span> <span class=\"token string\">'ArrowLeft'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\r\n    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>playerNum <span class=\"token operator\">===</span> <span class=\"token number\">2</span> <span class=\"token operator\">&amp;&amp;</span> event<span class=\"token punctuation\">.</span>key <span class=\"token operator\">===</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>leftPressed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h1 id=\"끝\" style=\"position:relative;\"><a href=\"#%EB%81%9D\" aria-label=\"끝 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>끝</h1>\n<p>😊</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EA%B8%B0%EB%B3%B8-%EB%A1%9C%EC%A7%81\">기본 로직</a></p>\n<ul>\n<li><a href=\"#requestanimationframe\">requestAnimationFrame</a></li>\n<li><a href=\"#canvas\">canvas</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%B6%94%EA%B0%80%ED%95%9C-%EB%82%B4%EC%9A%A9\">추가한 내용</a></p>\n</li>\n</ul>\n</div>","excerpt":"시작 기본 로직 canvas를 사용해 brick, ball, paddle을 도형으로 그려준다 requestAnimationFrame 함수를 사용해 update와 draw함수를 무한하게 반복적으로 실행하도록 한다 BrickBreak 클래스의 인스턴스를 생성해 init 함수로 게임을 실행한다 requestAnimationFrame 장점: tab이 비활성화 되면 중지, 60프레임으로 동작, 브라우저가 프레임 생성 시간에 맞춰서 애니메이션 코드를 실행 시켜 애니메이션이 부드럽게 동작함 접근성과 관련해 100% 커버리지가 아니라 polyfill 사용하는 것을 추천 (https://gist.github.com/paulirish/1579671) canvas beginPath = 선을 그릴때 시작하는 함수 closePath = 선을 그릴때닫아서 시작점과 잇는 함수 추가한 내용 fontFamily의 크기를 일일히 입력 해주어야하고 canvas에서 한번에 바꾸는 것이 안되어 font의 값들을 배열로…","frontmatter":{"date":"September 18, 2022","title":"js project - brick break","categories":"WIL","author":"chanjook1m","emoji":"😊"},"fields":{"slug":"/js-BrickBreak/"}},"next":{"id":"19e72d69-d575-50b1-9e14-cd6f7f9311dc","html":"<h1 id=\"시작\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EC%9E%91\" aria-label=\"시작 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시작</h1>\n<p>읽기 전에 알면 좋은 내용:</p>\n<blockquote>\n<ul>\n<li>immutability는 함수형 프로그래밍의 핵심 개념중 하나로 pure function이 가지고 있는 특징 중 하나이다</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li>side effect란 local environment 가 아닌 다른 environment의 vaiable의 상태(값)를 변경 하는 것을 말한다. 예를 들어 change라는 함수가 global variable a의 값을 변경한다면 side effect가 발생한 것이다</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li>immutability개념을 사용하면 side effect를 방지할 수 있다</li>\n</ul>\n</blockquote>\n<h2 id=\"요약\" style=\"position:relative;\"><a href=\"#%EC%9A%94%EC%95%BD\" aria-label=\"요약 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>요약</h2>\n<blockquote>\n<ul>\n<li>immutability란 객체가 생성된 이 후 해당 객체의 상태를 변경할 수 없다는 것을 의미한다. 조금 더 구체적으로 말하자면 메모리의 특정한 주소에 할당된 객체 값이 변경되면 안된다는 것이다</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li>간단하게 말하면 immutable은 메모리 주소에 저장된 내용을 변경할 수 없고 mutable은 메모리 주소에 저장된 내용을 변경할 수 있다는 개념이다</li>\n</ul>\n</blockquote>\n<h2 id=\"immutable-value\" style=\"position:relative;\"><a href=\"#immutable-value\" aria-label=\"immutable value permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>immutable value</h2>\n<blockquote>\n<ul>\n<li>immutability란 객체가 생성된 이 후 해당 객체의 상태를 변경할 수 없다는 것을 의미한다. 조금 더 구체적으로 말하자면 메모리의 특정한 주소에 할당된 객체 값이 변경되면 안된다는 것이다</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li>자바스크립트에서는 primitive type인 boolean, null, undefined, Number, String, Symbol 타입은 immutable 하다</li>\n</ul>\n</blockquote>\n<h2 id=\"mutable-value\" style=\"position:relative;\"><a href=\"#mutable-value\" aria-label=\"mutable value permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>mutable value</h2>\n<blockquote>\n<ul>\n<li>primitive type 외의 모든 type은 mutable한 특성을 갖는다. mutable은 새로운 주소에 값이 생성되지 않고 이미 특정한 주소에 할당된 값이 변경 될 수 있다는 것을 의미한다</li>\n</ul>\n</blockquote>\n<h2 id=\"예시\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9C\" aria-label=\"예시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'john'</span><span class=\"token punctuation\">,</span>\r\n  age<span class=\"token operator\">:</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span>\r\n  items<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">let</span> objName <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\r\nobj<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'tom'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">let</span> objItem <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">;</span>\r\nobj<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">// String은 immutable 하기 때문에 objName의 내용은 변하지 않는다</span>\r\nobjName<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'john'</span>\r\nobj<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'tom'</span>\r\n\r\n<span class=\"token comment\">// Arrayy는 mutable 하기 때문에 objItem와 obj.items의 내용은 동일하다</span>\r\nobjItem<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [1,2,3,4]</span>\r\nobj<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [1,2,3,4]</span></code></pre></div>\n<h2 id=\"팁\" style=\"position:relative;\"><a href=\"#%ED%8C%81\" aria-label=\"팁 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>팁</h2>\n<blockquote>\n<ul>\n<li>객체를 사용할때 spread operator를 사용해 복사를 하면 객체의 immutability를 유지할 수 있다. 단 shallow copy만 가능함으로 nested 객체인 경우 deep copy를 해야지만 완벽한 immutability 유지가 가능하다</li>\n</ul>\n</blockquote>\n<h1 id=\"끝\" style=\"position:relative;\"><a href=\"#%EB%81%9D\" aria-label=\"끝 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>끝</h1>\n<blockquote>\n<ul>\n<li>자바스크립트에서 String은 immutable 하지만 c언어에서는 문자열이 배열처럼 mutable 한 특성을 가져 가끔 헷갈렸는데 immutability 개념을 알고난 뒤에는 더이상 헷갈리지 않을 것 같다</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li>immutable은 call by value, mutable은 call by reference가 처리 되는 것과 비슷하게 처리 되는 것 같다</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li>immutability에 대해 정리한 후 함수형 프로그래밍에 관심이 생겨 mastering javascript functional programming 책을 시간날때 한번 읽어봐야 겠다</li>\n</ul>\n</blockquote>\n<p>😊</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EC%9A%94%EC%95%BD\">요약</a></li>\n<li><a href=\"#immutable-value\">immutable value</a></li>\n<li><a href=\"#mutable-value\">mutable value</a></li>\n<li><a href=\"#%EC%98%88%EC%8B%9C\">예시</a></li>\n<li><a href=\"#%ED%8C%81\">팁</a></li>\n</ul>\n</div>","frontmatter":{"date":"September 10, 2022","title":"Functional Programming - immutability","categories":"WIL","author":"chanjook1m","emoji":"😊"},"fields":{"slug":"/Functional Programming-immutability/"}},"prev":{"id":"96586c9f-755e-5a23-913a-c88b8d0b2026","html":"<h1 id=\"시작\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EC%9E%91\" aria-label=\"시작 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시작</h1>\n<p>읽기 전에 알면 좋은 내용:</p>\n<blockquote>\n<ul>\n<li>블록 요소들은 위에서 아래로 배치되고 inline은 왼쪽에서 오른쪽으로 배치된다. 이러한 동작을 normal flow라고 한다</li>\n</ul>\n</blockquote>\n<p><img src=\"/88e0a6d93a6f7ed1994a60ffb613b44f/block_inline.png\" alt=\"block_inline\"></p>\n<blockquote>\n<ul>\n<li>block formatting context 에서는 자식 요소들이 normal flow 형식으로 배치된다</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li>html 태그는 가장 처음으로 생성되는 block formatting context이다</li>\n</ul>\n</blockquote>\n<h2 id=\"요약\" style=\"position:relative;\"><a href=\"#%EC%9A%94%EC%95%BD\" aria-label=\"요약 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>요약</h2>\n<blockquote>\n<ul>\n<li>block formatting context는 layout에 영향을 주는 성질을 가지고 있지만 보통 float 요소의 위치를 잡을때나 margin collapsing을 방지할때 사용한다고 한다</li>\n</ul>\n</blockquote>\n<h2 id=\"contain-internal-floats\" style=\"position:relative;\"><a href=\"#contain-internal-floats\" aria-label=\"contain internal floats permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Contain internal floats</h2>\n<blockquote>\n<ul>\n<li>자식 요소 중 float 요소가 있을때 해당 요소를 다른 자식 요소의 height와 동일하게 맞출때 (float 자식 요소가 있을때 동일한 block formatting context에 자식 요소들을 넣을때)</li>\n</ul>\n</blockquote>\n<p><img src=\"/dae4837ba7060861289fa8eed466912a/bfc_1.png\" alt=\"bfc1\">;</p>\n<h2 id=\"exclude-external-floats\" style=\"position:relative;\"><a href=\"#exclude-external-floats\" aria-label=\"exclude external floats permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exclude external floats</h2>\n<blockquote>\n<ul>\n<li>형제 요소 중 float 요소가 있을때 해당 요소와 겹치지 않게 다른 block formatting context를 생성해 구분할때</li>\n</ul>\n</blockquote>\n<p><img src=\"/784909cc6b521a67ad5401c72e1e71d1/bfc_2.png\" alt=\"bfc2\">;</p>\n<h2 id=\"margin-collapsing-방지\" style=\"position:relative;\"><a href=\"#margin-collapsing-%EB%B0%A9%EC%A7%80\" aria-label=\"margin collapsing 방지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Margin collapsing 방지</h2>\n<blockquote>\n<ul>\n<li>형제 요소간 margin collapsing이 발생할 경우 새로운 block formatting context를 생성해 margin collapsing이 발생하지 않도록 할때</li>\n</ul>\n</blockquote>\n<h2 id=\"bfc-생성하는-방법\" style=\"position:relative;\"><a href=\"#bfc-%EC%83%9D%EC%84%B1%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"bfc 생성하는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>BFC 생성하는 방법</h2>\n<blockquote>\n<ul>\n<li>float 요소</li>\n<li>position: absolute인 요소</li>\n<li>display: inline-block인 요소</li>\n<li>overflow 프로퍼티에 visible이 아닌 값을 가진 block 요소</li>\n<li>display: flow-root or display: flow-root인 요소</li>\n<li>contain: layout, content, or strict인 요소</li>\n<li>flex 요소</li>\n<li>grid 요소</li>\n<li>etc…</li>\n</ul>\n</blockquote>\n<h1 id=\"끝\" style=\"position:relative;\"><a href=\"#%EB%81%9D\" aria-label=\"끝 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>끝</h1>\n<p>😊</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EC%9A%94%EC%95%BD\">요약</a></li>\n<li><a href=\"#contain-internal-floats\">Contain internal floats</a></li>\n<li><a href=\"#exclude-external-floats\">Exclude external floats</a></li>\n<li><a href=\"#margin-collapsing-%EB%B0%A9%EC%A7%80\">Margin collapsing 방지</a></li>\n<li><a href=\"#bfc-%EC%83%9D%EC%84%B1%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95\">BFC 생성하는 방법</a></li>\n</ul>\n</div>","frontmatter":{"date":"September 18, 2022","title":"CSS - BFC(Block formatting context)","categories":"WIL","author":"chanjook1m","emoji":"😊"},"fields":{"slug":"/CSS-BFC(block-formatting-context)/"}},"site":{"siteMetadata":{"siteUrl":"https://chanjook1m.github.io","comments":{"utterances":{"repo":"chanjook1m/chanjook1m.github.io"}}}}},"pageContext":{"slug":"/js-BrickBreak/","nextSlug":"/Functional Programming-immutability/","prevSlug":"/CSS-BFC(block-formatting-context)/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}