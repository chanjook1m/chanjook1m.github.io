{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/js-scope/",
    "result": {"data":{"cur":{"id":"4068e5be-08de-5d8c-80d4-75faf2e191e6","html":"<h2 id=\"closure\" style=\"position:relative;\"><a href=\"#closure\" aria-label=\"closure permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Closure</h2>\n<blockquote>\n<ul>\n<li>변수의 유효범위를 의미한다</li>\n</ul>\n</blockquote>\n<h3 id=\"전역-스코프-지역-스코프\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%97%AD-%EC%8A%A4%EC%BD%94%ED%94%84-%EC%A7%80%EC%97%AD-%EC%8A%A4%EC%BD%94%ED%94%84\" aria-label=\"전역 스코프 지역 스코프 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전역 스코프, 지역 스코프</h3>\n<blockquote>\n<ul>\n<li>변수와 같이 전역 스코프, 지역 스코프로 크게 나눌 수 있다</li>\n</ul>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> 전역 <span class=\"token operator\">=</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">var</span> 지역 <span class=\"token operator\">=</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"함수-스코프-블록-스코프\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98-%EC%8A%A4%EC%BD%94%ED%94%84-%EB%B8%94%EB%A1%9D-%EC%8A%A4%EC%BD%94%ED%94%84\" aria-label=\"함수 스코프 블록 스코프 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수 스코프, 블록 스코프</h3>\n<blockquote>\n<ul>\n<li>자바스크립트는 일반적으로 함수 스코프를 갖는다 (var를 사용한 경우)</li>\n</ul>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<ul>\n<li>let을 사용하면 블록 스코프를 사용할 수 있다</li>\n</ul>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"렉시컬-스코프\" style=\"position:relative;\"><a href=\"#%EB%A0%89%EC%8B%9C%EC%BB%AC-%EC%8A%A4%EC%BD%94%ED%94%84\" aria-label=\"렉시컬 스코프 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>렉시컬 스코프</h3>\n<blockquote>\n<ul>\n<li>렉시컬/정적 스코프에서는 함수 스코프의 상위 스코프를 함수가 선언된 위치의 스코프가 상위 스코프가 된다</li>\n<li>동적 스코프에서는 함수가 호출된 위치의 스코프가 상위 스코프가 된다.</li>\n<li>자바스크립트는 렉시컬 스코프를 따른다</li>\n</ul>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo_1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token keyword\">function</span> <span class=\"token function\">foo_2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">foo_3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n\r\n  <span class=\"token keyword\">function</span> <span class=\"token function\">foo_3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"암묵적-전역-변수\" style=\"position:relative;\"><a href=\"#%EC%95%94%EB%AC%B5%EC%A0%81-%EC%A0%84%EC%97%AD-%EB%B3%80%EC%88%98\" aria-label=\"암묵적 전역 변수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>암묵적 전역 변수(?)</h3>\n<blockquote>\n<ul>\n<li>자바스크립트에서는 변수 선언 없이 identifier를 사용해 값을 할당하면 window 객체의 프로퍼티에 해당 identifier를 포함해 전역 객체처럼 사용할 수 있다. 하지만 실제 전역 변수는 아니라 hoisting이 발생하지 않고 delete로 객체에서 삭제가 가능하다.</li>\n</ul>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  y <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">// window.y = 10 로 저장되어 있음</span></code></pre></div>\n<h1 id=\"끝\" style=\"position:relative;\"><a href=\"#%EB%81%9D\" aria-label=\"끝 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>끝</h1>\n<p>😊</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#closure\">Closure</a></p>\n<ul>\n<li><a href=\"#%EC%A0%84%EC%97%AD-%EC%8A%A4%EC%BD%94%ED%94%84-%EC%A7%80%EC%97%AD-%EC%8A%A4%EC%BD%94%ED%94%84\">전역 스코프, 지역 스코프</a></li>\n<li><a href=\"#%ED%95%A8%EC%88%98-%EC%8A%A4%EC%BD%94%ED%94%84-%EB%B8%94%EB%A1%9D-%EC%8A%A4%EC%BD%94%ED%94%84\">함수 스코프, 블록 스코프</a></li>\n<li><a href=\"#%EB%A0%89%EC%8B%9C%EC%BB%AC-%EC%8A%A4%EC%BD%94%ED%94%84\">렉시컬 스코프</a></li>\n<li><a href=\"#%EC%95%94%EB%AC%B5%EC%A0%81-%EC%A0%84%EC%97%AD-%EB%B3%80%EC%88%98\">암묵적 전역 변수(?)</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"Closure 변수의 유효범위를 의미한다 전역 스코프, 지역 스코프 변수와 같이 전역 스코프, 지역 스코프로 크게 나눌 수 있다 함수 스코프, 블록 스코프 자바스크립트는 일반적으로 함수 스코프를 갖는다 (var를 사용한 경우) let을 사용하면 블록 스코프를 사용할 수 있다 렉시컬 스코프 렉시컬/정적 스코프에서는 함수 스코프의 상위 스코프를 함수가 선언된 위치의 스코프가 상위 스코프가 된다 동적 스코프에서는 함수가 호출된 위치의 스코프가 상위 스코프가 된다. 자바스크립트는 렉시컬 스코프를 따른다 암묵적 전역 변수(?) 자바스크립트에서는 변수 선언 없이 identifier를 사용해 값을 할당하면 window 객체의 프로퍼티에 해당 identifier를 포함해 전역 객체처럼 사용할 수 있다. 하지만 실제 전역 변수는 아니라 hoisting이 발생하지 않고 delete로 객체에서 삭제가 가능하다. 끝 😊 Closure 전역 스코프, 지역 스코프 함수 스코프, 블록 스코프 렉시컬 스코프 …","frontmatter":{"date":"November 05, 2022","title":"JS - Scope","categories":"WIL","author":"chanjook1m","emoji":"😊"},"fields":{"slug":"/js-scope/"}},"next":{"id":"61018659-6d2f-59ee-9a35-bbef804d7dc5","html":"<h2 id=\"zustand-로-전역-상태-관리하기\" style=\"position:relative;\"><a href=\"#zustand-%EB%A1%9C-%EC%A0%84%EC%97%AD-%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC%ED%95%98%EA%B8%B0\" aria-label=\"zustand 로 전역 상태 관리하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>zustand 로 전역 상태 관리하기</h2>\n<hr>\n<h2 id=\"특징\" style=\"position:relative;\"><a href=\"#%ED%8A%B9%EC%A7%95\" aria-label=\"특징 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>특징</h2>\n<blockquote>\n<ul>\n<li>useState처럼 사용 가능</li>\n</ul>\n</blockquote>\n<h2 id=\"준비사항\" style=\"position:relative;\"><a href=\"#%EC%A4%80%EB%B9%84%EC%82%AC%ED%95%AD\" aria-label=\"준비사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>준비사항</h2>\n<blockquote>\n<ol>\n<li>store 파일 생성 후 store 만들기 + 관리할 상태 + 상태 변경 함수 만들기</li>\n<li>컴포넌트에 바인딩해서 사용</li>\n</ol>\n</blockquote>\n<h2 id=\"1-store-파일-생성-후-store-만들기--관리할-상태--상태-변경-함수-만들기\" style=\"position:relative;\"><a href=\"#1-store-%ED%8C%8C%EC%9D%BC-%EC%83%9D%EC%84%B1-%ED%9B%84-store-%EB%A7%8C%EB%93%A4%EA%B8%B0--%EA%B4%80%EB%A6%AC%ED%95%A0-%EC%83%81%ED%83%9C--%EC%83%81%ED%83%9C-%EB%B3%80%EA%B2%BD-%ED%95%A8%EC%88%98-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"1 store 파일 생성 후 store 만들기  관리할 상태  상태 변경 함수 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. store 파일 생성 후 store 만들기 + 관리할 상태 + 상태 변경 함수 만들기</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> create <span class=\"token keyword\">from</span> <span class=\"token string\">'zustand'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">const</span> useStore <span class=\"token operator\">=</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token keyword\">set</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n  data<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// &lt;---- 관리할 상태</span>\r\n\r\n  <span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">newData</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token comment\">// &lt;---- 상태 변경 함수 (reducer라고 보면됨)</span>\r\n    <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n      data<span class=\"token operator\">:</span> newData<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n\r\n  <span class=\"token keyword\">async</span> <span class=\"token function\">getAndSetData</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token constant\">URL</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token comment\">// &lt;--- thunk 같은거 필요 없이 비동기 함수도 사용 가능</span>\r\n    <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token constant\">URL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> data<span class=\"token operator\">:</span> response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">// 다른 state를 관리하려면 새로운 store 생성</span>\r\n<span class=\"token keyword\">const</span> useStore2 <span class=\"token operator\">=</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token keyword\">set</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n  count<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\r\n\r\n  <span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n      count<span class=\"token operator\">:</span> count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"2-컴포넌트에-바인딩해서-사용\" style=\"position:relative;\"><a href=\"#2-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EC%97%90-%EB%B0%94%EC%9D%B8%EB%94%A9%ED%95%B4%EC%84%9C-%EC%82%AC%EC%9A%A9\" aria-label=\"2 컴포넌트에 바인딩해서 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 컴포넌트에 바인딩해서 사용</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useStore<span class=\"token punctuation\">,</span> useStore2 <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./store.js'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data<span class=\"token punctuation\">,</span> setData<span class=\"token punctuation\">,</span> getAndSetData <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> count<span class=\"token punctuation\">,</span> increment <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useStore2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<h1 id=\"끝\" style=\"position:relative;\"><a href=\"#%EB%81%9D\" aria-label=\"끝 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>끝</h1>\n</blockquote>\n<p>😊</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#zustand-%EB%A1%9C-%EC%A0%84%EC%97%AD-%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC%ED%95%98%EA%B8%B0\">zustand 로 전역 상태 관리하기</a></li>\n<li><a href=\"#%ED%8A%B9%EC%A7%95\">특징</a></li>\n<li><a href=\"#%EC%A4%80%EB%B9%84%EC%82%AC%ED%95%AD\">준비사항</a></li>\n<li><a href=\"#1-store-%ED%8C%8C%EC%9D%BC-%EC%83%9D%EC%84%B1-%ED%9B%84-store-%EB%A7%8C%EB%93%A4%EA%B8%B0--%EA%B4%80%EB%A6%AC%ED%95%A0-%EC%83%81%ED%83%9C--%EC%83%81%ED%83%9C-%EB%B3%80%EA%B2%BD-%ED%95%A8%EC%88%98-%EB%A7%8C%EB%93%A4%EA%B8%B0\">1. store 파일 생성 후 store 만들기 + 관리할 상태 + 상태 변경 함수 만들기</a></li>\n<li><a href=\"#2-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EC%97%90-%EB%B0%94%EC%9D%B8%EB%94%A9%ED%95%B4%EC%84%9C-%EC%82%AC%EC%9A%A9\">2. 컴포넌트에 바인딩해서 사용</a></li>\n</ul>\n</div>","frontmatter":{"date":"October 30, 2022","title":"React - basic part 4 (zustand)","categories":"WIL","author":"chanjook1m","emoji":"😊"},"fields":{"slug":"/react-basic-part4/"}},"prev":{"id":"484c2baa-3be8-5f21-9511-686c6b3a9e24","html":"<h2 id=\"타입스크립트-소개\" style=\"position:relative;\"><a href=\"#%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%86%8C%EA%B0%9C\" aria-label=\"타입스크립트 소개 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>타입스크립트 소개</h2>\n<blockquote>\n<ul>\n<li>타입스크립트 = 자바스크립트에 타입 syntax가 추가된 것</li>\n<li>자바스크립트가 실행되는 모든 곳에서 실행가능</li>\n<li>@ts-check -> @param 으로 타입을 점차 설정 가능</li>\n<li>사용 이유: 자바스크립트는 동적 타입 언어라 런타임에 변수의 타입이 결정됨, 타입스크립트는 정적 타입 언어라 컴파일 타임에 변수의 타입이 결정됨 (타입 에러 미리 발견가능) + 타입스크립트는 es6을 es5나 es3으로 변환해 크로스브라우징 문제를 해결가능 (babel이 필요없음) + 가독성을 높여줌, 유지보수가 중요한 프로젝트에 적합함 (작은 프로젝트는 오버 엔지니어링)</li>\n</ul>\n</blockquote>\n<h2 id=\"타입스크립트-기본-타입\" style=\"position:relative;\"><a href=\"#%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EA%B8%B0%EB%B3%B8-%ED%83%80%EC%9E%85\" aria-label=\"타입스크립트 기본 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>타입스크립트 기본 타입</h2>\n<blockquote>\n<ul>\n<li>string, number, boolean\n<ul>\n<li>기본 타입 소문자임</li>\n</ul>\n</li>\n<li>object\n<ul>\n<li>보통 interface를 사용</li>\n<li>key type 형태로 object property의 타입 지정</li>\n</ul>\n</li>\n<li>Array, Tuple, enum\n<ul>\n<li>Array (e.g. number[])</li>\n<li>Tuple은 길이와 타입이 고정된 배열 (e.g. [string, number, number]</li>\n<li>enum은 이름이 있는 상수들이 열거되어 있는 집합 (e.g. enum EnumType {A,B,C})</li>\n</ul>\n</li>\n<li>any, void, never\n<ul>\n<li>any 타입은 비추천 (noImplicityAny: true를 사용하는 것이 좋음)</li>\n<li>void = 어떤 타입도 존재 할 수 없음, 보통 함수에서 리턴값이 없을때 사용</li>\n<li>never = 어떤 값도 가질 수 없는 타입, 보통 함수의 리턴값에 사용 (에러나 무한루프 = 종료가 될 수 없는 상황)</li>\n</ul>\n</li>\n<li>null, undefined\n<ul>\n<li>strictNullChecks 옵션을 사용해 null과 undefined 변수 참조시 에러 발생하게 하는 것이 좋음</li>\n</ul>\n</li>\n<li>Symbol\n<ul>\n<li>변경 불가능한 유일한 값</li>\n<li>보통 객체의 key로 자주 사용됨</li>\n</ul>\n</li>\n<li>unknown\n<ul>\n<li>어떤 값이든 들어올 수 있으니 검사해서 사용하라는 타입</li>\n<li>타입을 특정하기 전에는 에러를 발생시킴 (any와 다름)</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"타입스크립트에서-함수-선언하기\" style=\"position:relative;\"><a href=\"#%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%97%90%EC%84%9C-%ED%95%A8%EC%88%98-%EC%84%A0%EC%96%B8%ED%95%98%EA%B8%B0\" aria-label=\"타입스크립트에서 함수 선언하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>타입스크립트에서 함수 선언하기</h2>\n<blockquote>\n<ul>\n<li>type alias로 tuple 타입을 interface 사용한 것처럼 사용 가능</li>\n<li>자동 타입 추론으로 인해 수동적으로 입력안해도 되는 부분이 있음 (값으로 타입이 추론됨)</li>\n<li>type으로 함수 타입을 작성 가능 (e.g. type FnType = (a: string) => number;), 보통 함수 자체를 인자로 넘길때 사용</li>\n<li>선택적 매개변수 (job?: string), 기본 매개변수 job=“student”)</li>\n<li>나머지 매개변수 (…rest은 항상 배열 형태로 작성 해야함), 배열에 다양한 타입의 값이 들어오면 …rest (number | string)[] 과 같은 형태로 적어주어야함</li>\n</ul>\n</blockquote>\n<h2 id=\"유니언-타입과-교차-타입\" style=\"position:relative;\"><a href=\"#%EC%9C%A0%EB%8B%88%EC%96%B8-%ED%83%80%EC%9E%85%EA%B3%BC-%EA%B5%90%EC%B0%A8-%ED%83%80%EC%9E%85\" aria-label=\"유니언 타입과 교차 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>유니언 타입과 교차 타입</h2>\n<blockquote>\n<ul>\n<li>유니언 타입 (|)</li>\n<li>교차 타업 (&#x26;) (두 타입을 합쳐서 새로운 타입을 만들어줌, 클래스가 상속받는 느낌) (type Person = {a:string} , type Student = Person &#x26; {school:string}\n<ul>\n<li>기본 타입을 합치는 것은 안됨</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"type-aliases\" style=\"position:relative;\"><a href=\"#type-aliases\" aria-label=\"type aliases permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Type Aliases</h2>\n<blockquote>\n<ul>\n<li>중복되거나 복잡한 타입들에 이름을 지어줘서 재사용하는 것</li>\n<li>type Person = {name:string, age:number}</li>\n<li>type aliase와 interface의 차이점\n<ul>\n<li>interface는 extends 말고 그냥 동일한 interface를 선언해서 확장할 수 있음 (선언적 확장), interface는 객체에만 사용가능</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"리터럴-타입\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%ED%84%B0%EB%9F%B4-%ED%83%80%EC%9E%85\" aria-label=\"리터럴 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리터럴 타입</h2>\n<blockquote>\n<ul>\n<li>as const</li>\n<li>readonly만 가능한 타입</li>\n<li>백엔드와 값들을 정해놓고 사용할때 리터럴 타입으로 정해놓고 자주 사용함</li>\n</ul>\n</blockquote>\n<h2 id=\"클래스\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4\" aria-label=\"클래스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스</h2>\n<blockquote>\n<ul>\n<li>자바스크립트로 작성 후 quick fix로 TypeScript 형식으로 수정 가능</li>\n<li>클래스 상속</li>\n<li>public, protected, private 접근 제한자\n<ul>\n<li>public이 기본값</li>\n<li>protected = 상속받는 하위 클래스에서까지만 접근가능, 외부에서는 사용 불가능</li>\n<li>private = 본인 클래스에서만 접근 가능</li>\n</ul>\n</li>\n<li>readonly 지정자\n<ul>\n<li>constructor 외부에서 값 할당이 불가능하게 하도록함</li>\n</ul>\n</li>\n<li>getters/setters\n<ul>\n<li>private로 설정한 프로퍼티에 접근하거나 값을 변경할때 사용</li>\n</ul>\n</li>\n<li>전역 프로퍼티\n<ul>\n<li>static 키워드 사용, 인스턴스 생성하지 않고 클래스의 프로퍼티나 메소드에 접근 가능</li>\n</ul>\n</li>\n<li>추상 클래스\n<ul>\n<li>abstract class</li>\n<li>정의만 되어 있고 구현되어 있지 않음</li>\n<li>추상 클래스를 상속 받은 클래스 에서는 추상 클래스 메서드를 반드시 구현 해야됨</li>\n</ul>\n</li>\n<li>메서드 오버라이딩\n<ul>\n<li>상위 클래스에 정의 된 메소드를 하위 클래스에서 다시 재정의 하는 것</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"제네릭\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%EB%84%A4%EB%A6%AD\" aria-label=\"제네릭 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제네릭</h2>\n<blockquote>\n<ul>\n<li>다양한 타입에서 작동하는 컴포넌트를 작성할때 사용</li>\n<li>input과 output의 타입이 같아야 될때와 같은 상황에 사용 (function foo<T> (arg:T):T {}), const foo: <T>arg:T => T = (args) => {})</li>\n<li>제네릭 타입 변수\n<ul>\n<li>함수의 매개 변수로 여러개의 제네릭 타입 변수 사용 가능</li>\n</ul>\n</li>\n<li>제네릭 클래스\n<ul>\n<li>class List<T></li>\n</ul>\n</li>\n<li>제네릭 인터페이스\n<ul>\n<li>interface Person<T></li>\n</ul>\n</li>\n<li>제네릭 제약조건\n<ul>\n<li>T extends interface 와 같이 제네릭 타입을 interface로 확장할 수 있음</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h1 id=\"끝\" style=\"position:relative;\"><a href=\"#%EB%81%9D\" aria-label=\"끝 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>끝</h1>\n<p>😊</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%86%8C%EA%B0%9C\">타입스크립트 소개</a></li>\n<li><a href=\"#%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EA%B8%B0%EB%B3%B8-%ED%83%80%EC%9E%85\">타입스크립트 기본 타입</a></li>\n<li><a href=\"#%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%97%90%EC%84%9C-%ED%95%A8%EC%88%98-%EC%84%A0%EC%96%B8%ED%95%98%EA%B8%B0\">타입스크립트에서 함수 선언하기</a></li>\n<li><a href=\"#%EC%9C%A0%EB%8B%88%EC%96%B8-%ED%83%80%EC%9E%85%EA%B3%BC-%EA%B5%90%EC%B0%A8-%ED%83%80%EC%9E%85\">유니언 타입과 교차 타입</a></li>\n<li><a href=\"#type-aliases\">Type Aliases</a></li>\n<li><a href=\"#%EB%A6%AC%ED%84%B0%EB%9F%B4-%ED%83%80%EC%9E%85\">리터럴 타입</a></li>\n<li><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4\">클래스</a></li>\n<li><a href=\"#%EC%A0%9C%EB%84%A4%EB%A6%AD\">제네릭</a></li>\n</ul>\n</div>","frontmatter":{"date":"November 13, 2022","title":"TypeScript - part 1","categories":"WIL","author":"chanjook1m","emoji":"😊"},"fields":{"slug":"/ts-basic-part1/"}},"site":{"siteMetadata":{"siteUrl":"https://chanjook1m.github.io","comments":{"utterances":{"repo":"chanjook1m/chanjook1m.github.io"}}}}},"pageContext":{"slug":"/js-scope/","nextSlug":"/react-basic-part4/","prevSlug":"/ts-basic-part1/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}