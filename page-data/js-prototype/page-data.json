{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/js-prototype/",
    "result": {"data":{"cur":{"id":"6b3a1bf8-8756-548a-b13d-22274e91001f","html":"<blockquote>\n<ul>\n<li>자바스크립트는 클래스 기반이 아닌 프로토타입 기반 객체지향 프로그래밍 언어이다</li>\n</ul>\n</blockquote>\n<h2 id=\"프로토타입-객체\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85-%EA%B0%9D%EC%B2%B4\" aria-label=\"프로토타입 객체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로토타입 객체</h2>\n<blockquote>\n<ul>\n<li>자바스크립트에서는 모든 객체가 상위 객체에 연결되어 있다. 이러한 상위 객체들을 프로토타입 객체/프로토타입이라 한다.</li>\n<li>예: 모든 객체는 Object라는 상위 객체와 연결되어 있고 [[Prototype]] 인터널 슬롯(<strong>__proto__</strong>)을 통해 상위 객체에 정의된 속성을 사용할 수 있다</li>\n</ul>\n</blockquote>\n<h2 id=\"__proto__와-prototype-프로퍼티\" style=\"position:relative;\"><a href=\"#__proto__%EC%99%80-prototype-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0\" aria-label=\"__proto__와 prototype 프로퍼티 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>__proto__와 prototype 프로퍼티</h2>\n<blockquote>\n<ul>\n<li>__proto__는 어떤 객체의 부모 역할을 하는 프로토타입 객체를 가리킨다. (e.g. 일반적으로 함수는 <strong>__proto__</strong> = Function.prototype 값을 갖고 그 외 다른 객체는 <strong>__proto__</strong> = Object.prototpe을 갖는다). 이 속성을 변경하는 방식으로 상속을 구현할 수 있다.</li>\n<li>prototype은 함수 객체가 생성자로 사용될때 함수의 형태를 정의하게될 부모 객체를 가리키는 속성이다. 이 속성에 프로퍼티나 메소드를 추가 하면 prototype chain에 따라 자식에서 추가된 요소에 접근 가능하다.</li>\n</ul>\n</blockquote>\n<h2 id=\"constructor-속성\" style=\"position:relative;\"><a href=\"#constructor-%EC%86%8D%EC%84%B1\" aria-label=\"constructor 속성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>constructor 속성</h2>\n<blockquote>\n<ul>\n<li>객체의 입장에서 자신이 생성한 객체를 가리킨다 = 어떤 생성자 함수가 해당 객체를 생성했는지를 알수 있는 속성</li>\n</ul>\n</blockquote>\n<h2 id=\"prototype-chain\" style=\"position:relative;\"><a href=\"#prototype-chain\" aria-label=\"prototype chain permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>prototype chain</h2>\n<blockquote>\n<ul>\n<li>어떤 객체의 프로퍼티나 메소드에 접근할때 해당 요소가 현재 객체에 없다면 프로토타입 체인을 따라서 부모 객체에서 해당 프로퍼티나 메소드가 있는지 찾는다</li>\n<li>이때 접근하려고 하는데 없는 경우에만 프로토타입 체인이 동작하고 객체의 프로퍼티에 값을 할당하는 경우 그냥 값이 동적으로 추가된거나 값이 재할당만 된다</li>\n</ul>\n</blockquote>\n<h2 id=\"wrapper-class\" style=\"position:relative;\"><a href=\"#wrapper-class\" aria-label=\"wrapper class permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wrapper class</h2>\n<blockquote>\n<ul>\n<li>원시 타입은 일반적으로 객체가 아니므로 프로토타입을 가지지 않고 따라서 프로퍼티나 메소드를 추가할 수 없다</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li>원시 타입 = number, string, boolean, null, undefined</li>\n<li>자바스크립트에서는 number, string, boolean에 대해 wrapper 객체라는 것을 가지고 있다. 이 wrapper 객체를 사용해 원시타입에서도 프로퍼티가 공유된다</li>\n<li>해당 원시 타입과 관련된 기능을 객체지향적으로 제공할때 사용된다.</li>\n</ul>\n</blockquote>\n<h1 id=\"끝\" style=\"position:relative;\"><a href=\"#%EB%81%9D\" aria-label=\"끝 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>끝</h1>\n<p>😊</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85-%EA%B0%9D%EC%B2%B4\">프로토타입 객체</a></li>\n<li><a href=\"#__proto__%EC%99%80-prototype-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0\">__proto__와 prototype 프로퍼티</a></li>\n<li><a href=\"#constructor-%EC%86%8D%EC%84%B1\">constructor 속성</a></li>\n<li><a href=\"#prototype-chain\">prototype chain</a></li>\n<li><a href=\"#wrapper-class\">Wrapper class</a></li>\n</ul>\n</div>","excerpt":"자바스크립트는 클래스 기반이 아닌 프로토타입 기반 객체지향 프로그래밍 언어이다 프로토타입 객체 자바스크립트에서는 모든 객체가 상위 객체에 연결되어 있다. 이러한 상위 객체들을 프로토타입 객체/프로토타입이라 한다. 예: 모든 객체는 Object라는 상위 객체와 연결되어 있고 [[Prototype]] 인터널 슬롯(__proto__)을 통해 상위 객체에 정의된 속성을 사용할 수 있다 __proto__와 prototype 프로퍼티 __proto__는 어떤 객체의 부모 역할을 하는 프로토타입 객체를 가리킨다. (e.g. 일반적으로 함수는 __proto__ = Function.prototype 값을 갖고 그 외 다른 객체는 __proto__ = Object.prototpe을 갖는다). 이 속성을 변경하는 방식으로 상속을 구현할 수 있다. prototype은 함수 객체가 생성자로 사용될때 함수의 형태를 정의하게될 부모 객체를 가리키는 속성이다. 이 속성에 프로퍼티나 메소드를 추가 하면 prot…","frontmatter":{"date":"November 20, 2022","title":"JS - Prototype","categories":"WIL","author":"chanjook1m","emoji":"😊"},"fields":{"slug":"/js-prototype/"}},"next":{"id":"4763da5f-7aa1-5a20-9bf7-a0f2c7814a2a","html":"<h2 id=\"타입-가드\" style=\"position:relative;\"><a href=\"#%ED%83%80%EC%9E%85-%EA%B0%80%EB%93%9C\" aria-label=\"타입 가드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>타입 가드</h2>\n<blockquote>\n<ul>\n<li>타입을 걸러내는 것을 말함</li>\n</ul>\n</blockquote>\n<h4 id=\"타입-단언\" style=\"position:relative;\"><a href=\"#%ED%83%80%EC%9E%85-%EB%8B%A8%EC%96%B8\" aria-label=\"타입 단언 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>타입 단언</h4>\n<blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- 타입 추론이 정확하지 않을때 as 키워드를 사용해 타입을 명시하는 방법\r\n- 예: a.length  대신에 (a as string).length\r\n- 추론이 잘되는 것을 이상한 타입으로 명시 하면 에러 발생</code></pre></div>\n</blockquote>\n<h4 id=\"타입-서술어\" style=\"position:relative;\"><a href=\"#%ED%83%80%EC%9E%85-%EC%84%9C%EC%88%A0%EC%96%B4\" aria-label=\"타입 서술어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>타입 서술어</h4>\n<blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- 함수 리턴 타입을 명시해 true인 경우 명시된 타입으로 false인 경우 다른 타입으로 변환함</code></pre></div>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 예제</span>\r\n<span class=\"token function\">isFish</span><span class=\"token punctuation\">(</span>pet<span class=\"token operator\">:</span> Fish <span class=\"token operator\">|</span> Bird<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> pet is Fish <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"in-연산자-사용하기\" style=\"position:relative;\"><a href=\"#in-%EC%97%B0%EC%82%B0%EC%9E%90-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"in 연산자 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>in 연산자 사용하기</h4>\n<blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- 보통 자바스크립트 객체 안에 속성이 있는 여부를 확인할때 in 사용\r\n- 타입으로 추론하지 않고 속성이 있는지에 따라 타입 가드 적용</code></pre></div>\n</blockquote>\n<h4 id=\"instanceof-사용하기\" style=\"position:relative;\"><a href=\"#instanceof-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"instanceof 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>instanceof 사용하기</h4>\n<blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- 보통 객체가 어떤 클래스에 속하는지 판별할때 사용\r\n- arg instanceof User 와 같이 arg이 User 타입인지 확인</code></pre></div>\n</blockquote>\n<h4 id=\"인덱스-시그니처\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%EB%8D%B1%EC%8A%A4-%EC%8B%9C%EA%B7%B8%EB%8B%88%EC%B2%98\" aria-label=\"인덱스 시그니처 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인덱스 시그니처</h4>\n<blockquote>\n<ul>\n<li>객체의 키 이름을 모르고 타입만 알고 있는 경우 사용</li>\n<li>단점: 키가 없어도 접근이 가능함</li>\n</ul>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 예제</span>\r\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">NumberObj</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token punctuation\">[</span>index<span class=\"token operator\">:</span>string<span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\r\n  length<span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\r\n  a<span class=\"token operator\">:</span> number\r\n  b<span class=\"token operator\">:</span> string <span class=\"token comment\">// 에러</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<ul>\n<li>인덱스 시그니처를 사용한 후 keyof로 해당 객체의 key 타입을 사용할 수 있다\n<ul>\n<li>예: let A:keyof NumberObj // let A: string | number</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h4 id=\"매핑-타입\" style=\"position:relative;\"><a href=\"#%EB%A7%A4%ED%95%91-%ED%83%80%EC%9E%85\" aria-label=\"매핑 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>매핑 타입</h4>\n<blockquote>\n<ul>\n<li>새로운 타입을 만들때 기존 타입과 중복되는 부분이 많은 경우 사용</li>\n</ul>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 예제</span>\r\ntype OptionsFlag<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token punctuation\">[</span>Property <span class=\"token keyword\">in</span> keyof <span class=\"token constant\">T</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> boolean<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\ntype Input <span class=\"token operator\">=</span>\r\n<span class=\"token punctuation\">{</span>\r\n  value<span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\r\n  <span class=\"token function-variable function\">onChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\r\n  disabled<span class=\"token operator\">:</span> boolean<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\ntype InputOptions <span class=\"token operator\">=</span> OptionsFlag<span class=\"token operator\">&lt;</span>Input<span class=\"token operator\">></span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// InputOptions는 Input의 모든 타입이 boolean으로 변경된 타입을 가짐</span></code></pre></div>\n<h4 id=\"조건부-타입\" style=\"position:relative;\"><a href=\"#%EC%A1%B0%EA%B1%B4%EB%B6%80-%ED%83%80%EC%9E%85\" aria-label=\"조건부 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>조건부 타입</h4>\n<blockquote>\n<ul>\n<li>타입을 조건적으로 부여</li>\n</ul>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 예제</span>\r\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IdLabel</span> <span class=\"token punctuation\">{</span>\r\n  id<span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">NameLabel</span> <span class=\"token punctuation\">{</span>\r\n  name<span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\ntype NameOrId<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">number</span> <span class=\"token operator\">|</span> string<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">number</span> <span class=\"token operator\">?</span> IdLabel <span class=\"token operator\">:</span> NameLabel<span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<ul>\n<li>분산조건부 타입\n<ul>\n<li>제네릭 타입 위에서 조건부 타입을 사용하면 분산적으로 (분배법칙처럼) 동작한다</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 예제</span>\r\ntype <span class=\"token constant\">T</span> <span class=\"token operator\">=</span> number <span class=\"token operator\">|</span> boolean<span class=\"token punctuation\">;</span>\r\ntype Test<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">number</span> <span class=\"token operator\">?</span> <span class=\"token constant\">T</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\r\ntype <span class=\"token constant\">A</span> <span class=\"token operator\">=</span> Test<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token comment\">// number | boolean</span></code></pre></div>\n<blockquote>\n<ul>\n<li>조건부 타입의 추론\n<ul>\n<li>infer (런타임에서 타입을 추론)</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h4 id=\"유틸리티-타입\" style=\"position:relative;\"><a href=\"#%EC%9C%A0%ED%8B%B8%EB%A6%AC%ED%8B%B0-%ED%83%80%EC%9E%85\" aria-label=\"유틸리티 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>유틸리티 타입</h4>\n<blockquote>\n<ul>\n<li>타입스크립트에서 만들어놓은 타입\n<ul>\n<li>Partial<T> = 모든 속성이 옵셔널로 변경된 타입을 반환</li>\n<li>Readonly<T> = 모든 속성이 readonly 변경된 타입을 반환</li>\n<li>Record&#x3C;K,T> = 속성의 키가 K이고 속성의 값이 T인 타입을 반환</li>\n<li>Pick&#x3C;T,K> = 리터럴 타입으로 T 타입의 부분적인 프로퍼티들을 K로 명시한 후 선택해 타입을 반환</li>\n<li>Omit&#x3C;T,K> = 리터럴 타입으로 제외할 T 타입의 부분적인 프로퍼티들을 K로 명시한 후 타입을 반환</li>\n<li>Exclude&#x3C;T,U> = T 타입에서 U 타입을 제외한 타입을 반환 (T는 Union)</li>\n<li>Extract&#x3C;T,U> = U에 할당 가능한 모든 유니온 멤버를 T에서 가져와서 반환</li>\n<li>Nonnullable<T> = T에서 null과 undefined를 제외한 타입을 반환</li>\n<li>Parameters<T> = 함수의 매개변수에 사용된 타입을 튜플 타입으로 반환</li>\n<li>ReturnType<T> = 함수의 리턴타입을 반환</li>\n<li>Required<T> = 모든 속성이 required로 변경된 타입을 반환</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h1 id=\"끝\" style=\"position:relative;\"><a href=\"#%EB%81%9D\" aria-label=\"끝 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>끝</h1>\n<p>😊</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%ED%83%80%EC%9E%85-%EA%B0%80%EB%93%9C\">타입 가드</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#%ED%83%80%EC%9E%85-%EB%8B%A8%EC%96%B8\">타입 단언</a></li>\n<li><a href=\"#%ED%83%80%EC%9E%85-%EC%84%9C%EC%88%A0%EC%96%B4\">타입 서술어</a></li>\n<li><a href=\"#in-%EC%97%B0%EC%82%B0%EC%9E%90-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\">in 연산자 사용하기</a></li>\n<li><a href=\"#instanceof-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\">instanceof 사용하기</a></li>\n<li><a href=\"#%EC%9D%B8%EB%8D%B1%EC%8A%A4-%EC%8B%9C%EA%B7%B8%EB%8B%88%EC%B2%98\">인덱스 시그니처</a></li>\n<li><a href=\"#%EB%A7%A4%ED%95%91-%ED%83%80%EC%9E%85\">매핑 타입</a></li>\n<li><a href=\"#%EC%A1%B0%EA%B1%B4%EB%B6%80-%ED%83%80%EC%9E%85\">조건부 타입</a></li>\n<li><a href=\"#%EC%9C%A0%ED%8B%B8%EB%A6%AC%ED%8B%B0-%ED%83%80%EC%9E%85\">유틸리티 타입</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"November 20, 2022","title":"TypeScript - part 2","categories":"WIL","author":"chanjook1m","emoji":"😊"},"fields":{"slug":"/ts-basic-part2/"}},"prev":{"id":"06e00bdf-ae39-5613-97f6-3720be4718fa","html":"<h2 id=\"this\" style=\"position:relative;\"><a href=\"#this\" aria-label=\"this permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>this?</h2>\n<blockquote>\n<ul>\n<li>this는 현재 실행 되는 코드가 어떤 object를 가리키고 있는지를 알려준다</li>\n<li>함수가 호출 되면 암묵적인 매개변수로 arguments와 this가 전달된다</li>\n<li>this binding = 함수가 호출 될때 this에 바인딩 되는 객체가 동적으로 결정된다</li>\n</ul>\n</blockquote>\n<h4 id=\"함수-호출에-따른-this\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98-%ED%98%B8%EC%B6%9C%EC%97%90-%EB%94%B0%EB%A5%B8-this\" aria-label=\"함수 호출에 따른 this permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수 호출에 따른 this</h4>\n<blockquote>\n<ul>\n<li>자바스크립트에서는 크게 4가지 함수 호출 방식이 존재 한다</li>\n</ul>\n</blockquote>\n<h6 id=\"1-함수-호출\" style=\"position:relative;\"><a href=\"#1-%ED%95%A8%EC%88%98-%ED%98%B8%EC%B6%9C\" aria-label=\"1 함수 호출 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 함수 호출</h6>\n<blockquote>\n<ul>\n<li>글로벌 영역에서 선언한 전역함수 에서는 this가 당연히 전역 객체에 바인딩 되고 함수 내부에 선언된 내부 함수, 메소드 내부에 선언된 내부 함수, 콜백함수 상관 없이 내부 함수는 this가 전역 객체에 바인딩 된다</li>\n</ul>\n</blockquote>\n<h6 id=\"2-메소드-호출\" style=\"position:relative;\"><a href=\"#2-%EB%A9%94%EC%86%8C%EB%93%9C-%ED%98%B8%EC%B6%9C\" aria-label=\"2 메소드 호출 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 메소드 호출</h6>\n<blockquote>\n<ul>\n<li>메소드에서는 this가 해당 메소드를 호출한 객체에 바인딩 된다</li>\n</ul>\n</blockquote>\n<h6 id=\"3-생성자-함수-호출\" style=\"position:relative;\"><a href=\"#3-%EC%83%9D%EC%84%B1%EC%9E%90-%ED%95%A8%EC%88%98-%ED%98%B8%EC%B6%9C\" aria-label=\"3 생성자 함수 호출 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 생성자 함수 호출</h6>\n<blockquote>\n<ul>\n<li>this가 해당 함수가 생성하는 객체에 바인딩 된다</li>\n</ul>\n</blockquote>\n<h6 id=\"4-applycallbind-호출\" style=\"position:relative;\"><a href=\"#4-applycallbind-%ED%98%B8%EC%B6%9C\" aria-label=\"4 applycallbind 호출 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. apply/call/bind 호출</h6>\n<blockquote>\n<ul>\n<li>명시적으로 this를 특정 객체에 바인딩하는 방법이다</li>\n<li>콜백함수는 this가 전역객체에 바인딩 되기 때문에 보통 콜백함수에서 콜백함수가 호출되는 객체의 property를 사용할때 해당 함수로 호출되는 객체를 명시해줄때 사용한다\r\n(- 해당 객체에서 this를 다른 변수에 저장하고 내부함수에서 해당 변수를 사용해 property를 참조하는 방법도 있다)</li>\n</ul>\n</blockquote>\n<h1 id=\"끝\" style=\"position:relative;\"><a href=\"#%EB%81%9D\" aria-label=\"끝 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>끝</h1>\n<p>😊</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#this\">this?</a></p>\n<ul>\n<li>\n<ul>\n<li>\n<p><a href=\"#%ED%95%A8%EC%88%98-%ED%98%B8%EC%B6%9C%EC%97%90-%EB%94%B0%EB%A5%B8-this\">함수 호출에 따른 this</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#1-%ED%95%A8%EC%88%98-%ED%98%B8%EC%B6%9C\">1. 함수 호출</a></li>\n<li><a href=\"#2-%EB%A9%94%EC%86%8C%EB%93%9C-%ED%98%B8%EC%B6%9C\">2. 메소드 호출</a></li>\n<li><a href=\"#3-%EC%83%9D%EC%84%B1%EC%9E%90-%ED%95%A8%EC%88%98-%ED%98%B8%EC%B6%9C\">3. 생성자 함수 호출</a></li>\n<li><a href=\"#4-applycallbind-%ED%98%B8%EC%B6%9C\">4. apply/call/bind 호출</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"November 27, 2022","title":"JS - this","categories":"WIL","author":"chanjook1m","emoji":"😊"},"fields":{"slug":"/js-this/"}},"site":{"siteMetadata":{"siteUrl":"https://chanjook1m.github.io","comments":{"utterances":{"repo":"chanjook1m/chanjook1m.github.io"}}}}},"pageContext":{"slug":"/js-prototype/","nextSlug":"/ts-basic-part2/","prevSlug":"/js-this/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}