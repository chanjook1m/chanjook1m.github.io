{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/WIL",
    "result": {"pageContext":{"currentCategory":"WIL","categories":["All","WIL","PS","블로그"],"edges":[{"node":{"id":"3a123fe1-e591-5027-b40e-fcc22d01d4ae","excerpt":"시작 읽기 전에 알면 좋은 내용: 브라우저나 node.js는 자바스크립트 엔진을 가지고 있어 자바스크립트가 실행될 수 있는 환경 (=environment)을 제공한다 해당 과정은 Chrome의 V8 엔진 기준으로 작성되었다 엔진 마다 해석 과정에서 약간의 차이가 있을 수도 있다 요약 자바스크립트 코드 -> parsing -> AST (자바스크립트 코드를 트리 구조로 변환한 형태) -> interpretation -> 바이트 코드 (AST를 코드형태로 다시 변환함) -> compilation -> 머신 코드 실행 1. Step: parsing parser는 자바스크립트 코드를 한줄씩 읽으며 두가지 작업을 진행한다 첫번째로 lexical 분석을 통해 자바스크립트 코드를 keyword나 단어로 구분해 의미있는 단어형태(=토큰)으로 구분한다 두번째로 sematic 분석을 통해 나열된 토큰들이 문법적으로 문제가 없는지 확인한다 결과물로 아래와 같이 AST(=abstract syntax tr…","fields":{"slug":"/js-engine/"},"frontmatter":{"categories":"WIL","title":"자바스크립트 엔진이 자바스크립트를 해석하는 과정","date":"August 13, 2022"}},"next":{"fields":{"slug":"/Leetcode-278/"}},"previous":null},{"node":{"id":"8e11d90f-11b8-5e16-bdb8-454b9e0c8f6e","excerpt":"시작 해당 코드의 차이들에 대해 살펴보기 전에 알아야할 내용: 컴퓨터는 1 bit(=binary digit), 즉 2진수 (0,1) 밖에 이해하지 못한다 이때 0은 전기 신호가 없음, 1은 전기 신호가 있음을 의미한다 0과 1은 컴퓨터가 이해하는 알파벳이라고 보면 된다 컴퓨터는 0과 1을 사용해 정보를 저장할 뿐이다. 저장된 정보를 정해둔 약속에 맞게 해석한 것이 언어가 되는 것이다 1. 바이너리 코드와 머신 코드 바이너리 코드나 머신 코드나 0과 1로 나열되어 표현된 정보이다. (예: 00011000 11011111) 차이는 머신 코드는 머신이 이해할 수 있는 언어이고 바이너리 코드는 그냥 일반적인 정보이다. 2. 바이너리 코드 = 머신 코드? 관점에 따라 바이너리 코드 = 머신 코드가 성립할 수 있지만 약간의 차이가 있다. 컴퓨터에 저장되어 있는 모든 정보는 바이너리 코드이다. 바이너리 코드를 특정한 문법에 따라 해석해 컴퓨터를 조작할 수 있는 것이 머신 코드이다. 컴퓨터는 b…","fields":{"slug":"/code-types/"},"frontmatter":{"categories":"WIL","title":"바이너리 코드, 머신 코드, 바이트 코드, 어셈블리 코드","date":"August 06, 2022"}},"next":{"fields":{"slug":"/Leetcode-189/"}},"previous":{"fields":{"slug":"/Leetcode-278/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}