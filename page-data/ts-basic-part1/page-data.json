{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/ts-basic-part1/",
    "result": {"data":{"cur":{"id":"484c2baa-3be8-5f21-9511-686c6b3a9e24","html":"<h2 id=\"타입스크립트-소개\" style=\"position:relative;\"><a href=\"#%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%86%8C%EA%B0%9C\" aria-label=\"타입스크립트 소개 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>타입스크립트 소개</h2>\n<blockquote>\n<ul>\n<li>타입스크립트 = 자바스크립트에 타입 syntax가 추가된 것</li>\n<li>자바스크립트가 실행되는 모든 곳에서 실행가능</li>\n<li>@ts-check -> @param 으로 타입을 점차 설정 가능</li>\n<li>사용 이유: 자바스크립트는 동적 타입 언어라 런타임에 변수의 타입이 결정됨, 타입스크립트는 정적 타입 언어라 컴파일 타임에 변수의 타입이 결정됨 (타입 에러 미리 발견가능) + 타입스크립트는 es6을 es5나 es3으로 변환해 크로스브라우징 문제를 해결가능 (babel이 필요없음) + 가독성을 높여줌, 유지보수가 중요한 프로젝트에 적합함 (작은 프로젝트는 오버 엔지니어링)</li>\n</ul>\n</blockquote>\n<h2 id=\"타입스크립트-기본-타입\" style=\"position:relative;\"><a href=\"#%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EA%B8%B0%EB%B3%B8-%ED%83%80%EC%9E%85\" aria-label=\"타입스크립트 기본 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>타입스크립트 기본 타입</h2>\n<blockquote>\n<ul>\n<li>string, number, boolean\n<ul>\n<li>기본 타입 소문자임</li>\n</ul>\n</li>\n<li>object\n<ul>\n<li>보통 interface를 사용</li>\n<li>key type 형태로 object property의 타입 지정</li>\n</ul>\n</li>\n<li>Array, Tuple, enum\n<ul>\n<li>Array (e.g. number[])</li>\n<li>Tuple은 길이와 타입이 고정된 배열 (e.g. [string, number, number]</li>\n<li>enum은 이름이 있는 상수들이 열거되어 있는 집합 (e.g. enum EnumType {A,B,C})</li>\n</ul>\n</li>\n<li>any, void, never\n<ul>\n<li>any 타입은 비추천 (noImplicityAny: true를 사용하는 것이 좋음)</li>\n<li>void = 어떤 타입도 존재 할 수 없음, 보통 함수에서 리턴값이 없을때 사용</li>\n<li>never = 어떤 값도 가질 수 없는 타입, 보통 함수의 리턴값에 사용 (에러나 무한루프 = 종료가 될 수 없는 상황)</li>\n</ul>\n</li>\n<li>null, undefined\n<ul>\n<li>strictNullChecks 옵션을 사용해 null과 undefined 변수 참조시 에러 발생하게 하는 것이 좋음</li>\n</ul>\n</li>\n<li>Symbol\n<ul>\n<li>변경 불가능한 유일한 값</li>\n<li>보통 객체의 key로 자주 사용됨</li>\n</ul>\n</li>\n<li>unknown\n<ul>\n<li>어떤 값이든 들어올 수 있으니 검사해서 사용하라는 타입</li>\n<li>타입을 특정하기 전에는 에러를 발생시킴 (any와 다름)</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"타입스크립트에서-함수-선언하기\" style=\"position:relative;\"><a href=\"#%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%97%90%EC%84%9C-%ED%95%A8%EC%88%98-%EC%84%A0%EC%96%B8%ED%95%98%EA%B8%B0\" aria-label=\"타입스크립트에서 함수 선언하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>타입스크립트에서 함수 선언하기</h2>\n<blockquote>\n<ul>\n<li>type alias로 tuple 타입을 interface 사용한 것처럼 사용 가능</li>\n<li>자동 타입 추론으로 인해 수동적으로 입력안해도 되는 부분이 있음 (값으로 타입이 추론됨)</li>\n<li>type으로 함수 타입을 작성 가능 (e.g. type FnType = (a: string) => number;), 보통 함수 자체를 인자로 넘길때 사용</li>\n<li>선택적 매개변수 (job?: string), 기본 매개변수 job=“student”)</li>\n<li>나머지 매개변수 (…rest은 항상 배열 형태로 작성 해야함), 배열에 다양한 타입의 값이 들어오면 …rest (number | string)[] 과 같은 형태로 적어주어야함</li>\n</ul>\n</blockquote>\n<h2 id=\"유니언-타입과-교차-타입\" style=\"position:relative;\"><a href=\"#%EC%9C%A0%EB%8B%88%EC%96%B8-%ED%83%80%EC%9E%85%EA%B3%BC-%EA%B5%90%EC%B0%A8-%ED%83%80%EC%9E%85\" aria-label=\"유니언 타입과 교차 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>유니언 타입과 교차 타입</h2>\n<blockquote>\n<ul>\n<li>유니언 타입 (|)</li>\n<li>교차 타업 (&#x26;) (두 타입을 합쳐서 새로운 타입을 만들어줌, 클래스가 상속받는 느낌) (type Person = {a:string} , type Student = Person &#x26; {school:string}\n<ul>\n<li>기본 타입을 합치는 것은 안됨</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"type-aliases\" style=\"position:relative;\"><a href=\"#type-aliases\" aria-label=\"type aliases permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Type Aliases</h2>\n<blockquote>\n<ul>\n<li>중복되거나 복잡한 타입들에 이름을 지어줘서 재사용하는 것</li>\n<li>type Person = {name:string, age:number}</li>\n<li>type aliase와 interface의 차이점\n<ul>\n<li>interface는 extends 말고 그냥 동일한 interface를 선언해서 확장할 수 있음 (선언적 확장), interface는 객체에만 사용가능</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"리터럴-타입\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%ED%84%B0%EB%9F%B4-%ED%83%80%EC%9E%85\" aria-label=\"리터럴 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리터럴 타입</h2>\n<blockquote>\n<ul>\n<li>as const</li>\n<li>readonly만 가능한 타입</li>\n<li>백엔드와 값들을 정해놓고 사용할때 리터럴 타입으로 정해놓고 자주 사용함</li>\n</ul>\n</blockquote>\n<h2 id=\"클래스\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4\" aria-label=\"클래스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스</h2>\n<blockquote>\n<ul>\n<li>자바스크립트로 작성 후 quick fix로 TypeScript 형식으로 수정 가능</li>\n<li>클래스 상속</li>\n<li>public, protected, private 접근 제한자\n<ul>\n<li>public이 기본값</li>\n<li>protected = 상속받는 하위 클래스에서까지만 접근가능, 외부에서는 사용 불가능</li>\n<li>private = 본인 클래스에서만 접근 가능</li>\n</ul>\n</li>\n<li>readonly 지정자\n<ul>\n<li>constructor 외부에서 값 할당이 불가능하게 하도록함</li>\n</ul>\n</li>\n<li>getters/setters\n<ul>\n<li>private로 설정한 프로퍼티에 접근하거나 값을 변경할때 사용</li>\n</ul>\n</li>\n<li>전역 프로퍼티\n<ul>\n<li>static 키워드 사용, 인스턴스 생성하지 않고 클래스의 프로퍼티나 메소드에 접근 가능</li>\n</ul>\n</li>\n<li>추상 클래스\n<ul>\n<li>abstract class</li>\n<li>정의만 되어 있고 구현되어 있지 않음</li>\n<li>추상 클래스를 상속 받은 클래스 에서는 추상 클래스 메서드를 반드시 구현 해야됨</li>\n</ul>\n</li>\n<li>메서드 오버라이딩\n<ul>\n<li>상위 클래스에 정의 된 메소드를 하위 클래스에서 다시 재정의 하는 것</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"제네릭\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%EB%84%A4%EB%A6%AD\" aria-label=\"제네릭 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제네릭</h2>\n<blockquote>\n<ul>\n<li>다양한 타입에서 작동하는 컴포넌트를 작성할때 사용</li>\n<li>input과 output의 타입이 같아야 될때와 같은 상황에 사용 (function foo<T> (arg:T):T {}), const foo: <T>arg:T => T = (args) => {})</li>\n<li>제네릭 타입 변수\n<ul>\n<li>함수의 매개 변수로 여러개의 제네릭 타입 변수 사용 가능</li>\n</ul>\n</li>\n<li>제네릭 클래스\n<ul>\n<li>class List<T></li>\n</ul>\n</li>\n<li>제네릭 인터페이스\n<ul>\n<li>interface Person<T></li>\n</ul>\n</li>\n<li>제네릭 제약조건\n<ul>\n<li>T extends interface 와 같이 제네릭 타입을 interface로 확장할 수 있음</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h1 id=\"끝\" style=\"position:relative;\"><a href=\"#%EB%81%9D\" aria-label=\"끝 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>끝</h1>\n<p>😊</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%86%8C%EA%B0%9C\">타입스크립트 소개</a></li>\n<li><a href=\"#%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EA%B8%B0%EB%B3%B8-%ED%83%80%EC%9E%85\">타입스크립트 기본 타입</a></li>\n<li><a href=\"#%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%97%90%EC%84%9C-%ED%95%A8%EC%88%98-%EC%84%A0%EC%96%B8%ED%95%98%EA%B8%B0\">타입스크립트에서 함수 선언하기</a></li>\n<li><a href=\"#%EC%9C%A0%EB%8B%88%EC%96%B8-%ED%83%80%EC%9E%85%EA%B3%BC-%EA%B5%90%EC%B0%A8-%ED%83%80%EC%9E%85\">유니언 타입과 교차 타입</a></li>\n<li><a href=\"#type-aliases\">Type Aliases</a></li>\n<li><a href=\"#%EB%A6%AC%ED%84%B0%EB%9F%B4-%ED%83%80%EC%9E%85\">리터럴 타입</a></li>\n<li><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4\">클래스</a></li>\n<li><a href=\"#%EC%A0%9C%EB%84%A4%EB%A6%AD\">제네릭</a></li>\n</ul>\n</div>","excerpt":"타입스크립트 소개 타입스크립트 = 자바스크립트에 타입 syntax가 추가된 것 자바스크립트가 실행되는 모든 곳에서 실행가능 @ts-check -> @param 으로 타입을 점차 설정 가능 사용 이유: 자바스크립트는 동적 타입 언어라 런타임에 변수의 타입이 결정됨, 타입스크립트는 정적 타입 언어라 컴파일 타임에 변수의 타입이 결정됨 (타입 에러 미리 발견가능) + 타입스크립트는 es6을 es5나 es3으로 변환해 크로스브라우징 문제를 해결가능 (babel이 필요없음) + 가독성을 높여줌, 유지보수가 중요한 프로젝트에 적합함 (작은 프로젝트는 오버 엔지니어링) 타입스크립트 기본 타입 string, number, boolean 기본 타입 소문자임 object 보통 interface를 사용 key type 형태로 object property의 타입 지정 Array, Tuple, enum Array (e.g. number[]) Tuple은 길이와 타입이 고정된 배열 (e.g. [string…","frontmatter":{"date":"November 13, 2022","title":"TypeScript - part 1","categories":"WIL","author":"chanjook1m","emoji":"😊"},"fields":{"slug":"/ts-basic-part1/"}},"next":{"id":"4068e5be-08de-5d8c-80d4-75faf2e191e6","html":"<h2 id=\"closure\" style=\"position:relative;\"><a href=\"#closure\" aria-label=\"closure permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Closure</h2>\n<blockquote>\n<ul>\n<li>변수의 유효범위를 의미한다</li>\n</ul>\n</blockquote>\n<h3 id=\"전역-스코프-지역-스코프\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%97%AD-%EC%8A%A4%EC%BD%94%ED%94%84-%EC%A7%80%EC%97%AD-%EC%8A%A4%EC%BD%94%ED%94%84\" aria-label=\"전역 스코프 지역 스코프 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전역 스코프, 지역 스코프</h3>\n<blockquote>\n<ul>\n<li>변수와 같이 전역 스코프, 지역 스코프로 크게 나눌 수 있다</li>\n</ul>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> 전역 <span class=\"token operator\">=</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">var</span> 지역 <span class=\"token operator\">=</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"함수-스코프-블록-스코프\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98-%EC%8A%A4%EC%BD%94%ED%94%84-%EB%B8%94%EB%A1%9D-%EC%8A%A4%EC%BD%94%ED%94%84\" aria-label=\"함수 스코프 블록 스코프 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수 스코프, 블록 스코프</h3>\n<blockquote>\n<ul>\n<li>자바스크립트는 일반적으로 함수 스코프를 갖는다 (var를 사용한 경우)</li>\n</ul>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<ul>\n<li>let을 사용하면 블록 스코프를 사용할 수 있다</li>\n</ul>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"렉시컬-스코프\" style=\"position:relative;\"><a href=\"#%EB%A0%89%EC%8B%9C%EC%BB%AC-%EC%8A%A4%EC%BD%94%ED%94%84\" aria-label=\"렉시컬 스코프 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>렉시컬 스코프</h3>\n<blockquote>\n<ul>\n<li>렉시컬/정적 스코프에서는 함수 스코프의 상위 스코프를 함수가 선언된 위치의 스코프가 상위 스코프가 된다</li>\n<li>동적 스코프에서는 함수가 호출된 위치의 스코프가 상위 스코프가 된다.</li>\n<li>자바스크립트는 렉시컬 스코프를 따른다</li>\n</ul>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo_1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token keyword\">function</span> <span class=\"token function\">foo_2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">foo_3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n\r\n  <span class=\"token keyword\">function</span> <span class=\"token function\">foo_3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"암묵적-전역-변수\" style=\"position:relative;\"><a href=\"#%EC%95%94%EB%AC%B5%EC%A0%81-%EC%A0%84%EC%97%AD-%EB%B3%80%EC%88%98\" aria-label=\"암묵적 전역 변수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>암묵적 전역 변수(?)</h3>\n<blockquote>\n<ul>\n<li>자바스크립트에서는 변수 선언 없이 identifier를 사용해 값을 할당하면 window 객체의 프로퍼티에 해당 identifier를 포함해 전역 객체처럼 사용할 수 있다. 하지만 실제 전역 변수는 아니라 hoisting이 발생하지 않고 delete로 객체에서 삭제가 가능하다.</li>\n</ul>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  y <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">// window.y = 10 로 저장되어 있음</span></code></pre></div>\n<h1 id=\"끝\" style=\"position:relative;\"><a href=\"#%EB%81%9D\" aria-label=\"끝 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>끝</h1>\n<p>😊</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#closure\">Closure</a></p>\n<ul>\n<li><a href=\"#%EC%A0%84%EC%97%AD-%EC%8A%A4%EC%BD%94%ED%94%84-%EC%A7%80%EC%97%AD-%EC%8A%A4%EC%BD%94%ED%94%84\">전역 스코프, 지역 스코프</a></li>\n<li><a href=\"#%ED%95%A8%EC%88%98-%EC%8A%A4%EC%BD%94%ED%94%84-%EB%B8%94%EB%A1%9D-%EC%8A%A4%EC%BD%94%ED%94%84\">함수 스코프, 블록 스코프</a></li>\n<li><a href=\"#%EB%A0%89%EC%8B%9C%EC%BB%AC-%EC%8A%A4%EC%BD%94%ED%94%84\">렉시컬 스코프</a></li>\n<li><a href=\"#%EC%95%94%EB%AC%B5%EC%A0%81-%EC%A0%84%EC%97%AD-%EB%B3%80%EC%88%98\">암묵적 전역 변수(?)</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"November 05, 2022","title":"JS - Scope","categories":"WIL","author":"chanjook1m","emoji":"😊"},"fields":{"slug":"/js-scope/"}},"prev":{"id":"16fa927a-ce64-5443-90a3-6f420e6ab061","html":"<h2 id=\"쿠키란\" style=\"position:relative;\"><a href=\"#%EC%BF%A0%ED%82%A4%EB%9E%80\" aria-label=\"쿠키란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>쿠키란?</h2>\n<blockquote>\n<ul>\n<li>http는 stateless한 특징을 가지고 있다</li>\n<li>cookie는 서버에서 브라우저에게 보내는 데이터이다. 보통 유저를 식별하는 용도로 사용되어 브라우저에서 서버에 request를 보낼때 cookie를 넣어서 보내면 서버에서 어떤 브라우저가 요청을 보냈는지 구분할때 사용된다. => cookie를 사용하면 http를 stateful하게 사용할 수 있다</li>\n<li>일반적으로\n<ul>\n<li>세션 관리</li>\n<li>유저 세팅</li>\n<li>유저 행동을 tracking하기 위해 사용된다</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h3 id=\"쿠키-생성\" style=\"position:relative;\"><a href=\"#%EC%BF%A0%ED%82%A4-%EC%83%9D%EC%84%B1\" aria-label=\"쿠키 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>쿠키 생성</h3>\n<blockquote>\n<ul>\n<li>서버에서 http request 받은 후 Set-Cookie 헤더에 1개 이상의 쿠키를 넣어서 보낸다</li>\n<li>브라우저는 해당 쿠키를 저장한 후 서버에 request를 보낼때 마다 쿠키를 같이 보낸다</li>\n</ul>\n</blockquote>\n<ul>\n<li>서버에서는 domain, path로 쿠키를 받을 수 있는 곳을 제한하거나 expiration date로 쿠키가 보내질 수 있는 시간을 제한할 수 있다</li>\n</ul>\n<h3 id=\"쿠키-lifetime\" style=\"position:relative;\"><a href=\"#%EC%BF%A0%ED%82%A4-lifetime\" aria-label=\"쿠키 lifetime permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>쿠키 lifetime</h3>\n<blockquote>\n<ul>\n<li>permanent cookie는 expiration date가 명시되어 있으면 해당 date 이 후 삭제된다</li>\n<li>session cookie는 브라우저에서 세션 종료 요청을 서버에 보낼 시 session이 종료되면서 삭제된다</li>\n</ul>\n</blockquote>\n<h3 id=\"쿠키-접근제한\" style=\"position:relative;\"><a href=\"#%EC%BF%A0%ED%82%A4-%EC%A0%91%EA%B7%BC%EC%A0%9C%ED%95%9C\" aria-label=\"쿠키 접근제한 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>쿠키 접근제한</h3>\n<blockquote>\n<ul>\n<li>HTTPS인 경우 브라우저가 서버에 Secure 옵션과 쿠키를 같이 보내는데 이렇게 보낼 경우 man in the middle attack에 보호가 되어 중간에 쿠키를 쉽게 가로챌 수 없게된다</li>\n<li>HttpOnly 속성을 포함한 쿠키는 Javascript Document.Cookie API로 접근할 수 없게 되어 XSS 공격에 안전하다</li>\n</ul>\n</blockquote>\n<h3 id=\"domain\" style=\"position:relative;\"><a href=\"#domain\" aria-label=\"domain permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Domain</h3>\n<blockquote>\n<ul>\n<li>Domain 속성은 어떤 호스트에서 쿠키를 받을 수 있는지에 대한 정보를 갖는다. 해당 속성을 기입하지 않은 경우 subdomain을 제외한 쿠키를 설정하는 host와 같은 host 에서만 쿠키를 받을 수 있다 (host domain: aaa.com, subdomain: bbb.aaa.com)</li>\n<li>Domain 속성을 작성하면 subdomain에서도 쿠키를 받을 수 있다</li>\n</ul>\n</blockquote>\n<h3 id=\"path\" style=\"position:relative;\"><a href=\"#path\" aria-label=\"path permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Path</h3>\n<blockquote>\n<ul>\n<li>Path 속성은 request를 보낸 URL이 가져야할 path 정보이다. 예를 들어 Path=/docs 인 경우 /docs/test 와 같이 request URL이 /docs를 가지고 있어야지 Cookie header를 해당 host에 보내줄 수 있게 된다</li>\n</ul>\n</blockquote>\n<h3 id=\"samesite\" style=\"position:relative;\"><a href=\"#samesite\" aria-label=\"samesite permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SameSite</h3>\n<blockquote>\n<ul>\n<li>서버에서 cross-site request를 허용하는 지에 대한 정보를 가지고 있는 속성이다 (cross-site request는 다른 domain에서의 요청이다)</li>\n<li>CSRF 공격에 보호하기 위해 사용된다</li>\n<li>default는 Lax이고 Strict, None 옵션을 줄 수 있다\n<ul>\n<li>Strict는 same site</li>\n<li>Lax는 same site + 유저가 쿠키의 origin site로 이동 했을때</li>\n<li>None은 same site + cross site</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h3 id=\"쿠키-prefix\" style=\"position:relative;\"><a href=\"#%EC%BF%A0%ED%82%A4-prefix\" aria-label=\"쿠키 prefix permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>쿠키 prefix</h3>\n<blockquote>\n<ul>\n<li>쿠키에 prefix를 주어서 어떤 경우 Set-Cookie header에 쿠키가 넣어지는지 명시 할 수 있다</li>\n<li>__Host- = Secure 속성 포함 + secure origin + Domain 속성 없음 + Path=/ 인 경우 (요 속성은 domain에 제한된 속성이라고도 불린다)</li>\n<li>__Secure- = Secure 속성 포함 + secure origin 인 경우</li>\n</ul>\n</blockquote>\n<h3 id=\"쿠키-관련-규정\" style=\"position:relative;\"><a href=\"#%EC%BF%A0%ED%82%A4-%EA%B4%80%EB%A0%A8-%EA%B7%9C%EC%A0%95\" aria-label=\"쿠키 관련 규정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>쿠키 관련 규정</h3>\n<blockquote>\n<ul>\n<li>글로벌로 적용되는 규정에는 아래와 같은 것이 포함되어 있다</li>\n<li>유저가 쿠키 수집을 거부할 수 있어야함</li>\n<li>사이트에서 쿠키가 사용되는지 알려야함</li>\n<li>쿠키 없이 유저가 서비스의 대부분을 사용할 수 있어야함</li>\n</ul>\n</blockquote>\n<h1 id=\"끝\" style=\"position:relative;\"><a href=\"#%EB%81%9D\" aria-label=\"끝 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>끝</h1>\n<p>😊</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EC%BF%A0%ED%82%A4%EB%9E%80\">쿠키란?</a></p>\n<ul>\n<li><a href=\"#%EC%BF%A0%ED%82%A4-%EC%83%9D%EC%84%B1\">쿠키 생성</a></li>\n<li><a href=\"#%EC%BF%A0%ED%82%A4-lifetime\">쿠키 lifetime</a></li>\n<li><a href=\"#%EC%BF%A0%ED%82%A4-%EC%A0%91%EA%B7%BC%EC%A0%9C%ED%95%9C\">쿠키 접근제한</a></li>\n<li><a href=\"#domain\">Domain</a></li>\n<li><a href=\"#path\">Path</a></li>\n<li><a href=\"#samesite\">SameSite</a></li>\n<li><a href=\"#%EC%BF%A0%ED%82%A4-prefix\">쿠키 prefix</a></li>\n<li><a href=\"#%EC%BF%A0%ED%82%A4-%EA%B4%80%EB%A0%A8-%EA%B7%9C%EC%A0%95\">쿠키 관련 규정</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"November 13, 2022","title":"Cookie","categories":"WIL","author":"chanjook1m","emoji":"😊"},"fields":{"slug":"/cookie/"}},"site":{"siteMetadata":{"siteUrl":"https://chanjook1m.github.io","comments":{"utterances":{"repo":"chanjook1m/chanjook1m.github.io"}}}}},"pageContext":{"slug":"/ts-basic-part1/","nextSlug":"/js-scope/","prevSlug":"/cookie/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}